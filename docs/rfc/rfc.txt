Kevin MAUGE : kmauge@etud.u-pem.fr
Pape NDIAYE : pndiaye@etud.u-pem.fr




Name : Matou, a Chat service

Description: 
The purpose of Matou project is to realize a discussion and file exchanger service.

The clients are connected to a primary server. 
Each connected client is identified by a unique username. 
The server must guarantee that two client will not have the same username. 
After etablishing the connection, the client can:
	* Send message to all connected clients.
	* Send privates messages or files to a particular client.

 


Requirements:
	* All private communication are made by a direct connection between the two clients. The server will only be sollicited for the purpose of exchanging the address of those two clients.
	* Exchanging file should not block the messaging and vice versa.





Specifications:
	* Numbers are in Big Endian format.
	* String are encoded into UTF-8 charset.
	* The transport protocol used is TCP (with limit size specified in 4 bytes).
	* The maximum size of an encoded username is 32 bytes.
	* The maximum size of an encoded message is 512 bytes.
	* A username can only contain alphanumeric characters.
	* A message cannot contain any control character (\n, \r, \t, ...).
	* The size of a chunk of file is 4096 bytes.
	* Private connections are etablished on 2 ports : the first one for messages and the second one for files.
	* Private connection requests are forwarded by the server as notifications, so the receiver is not forced to answer it.

Acronym formats: 
	* C-S : Client to Server
	* S-C : Server to Client
	* S-A : Server to All Client
	* C-C : Client to Client









Interactions:
	Request for public connection
		[C-S] Request connection to Server
		The client requests a connection to the server with a specified username.
		+------+--------------+----------+
		| int  |     int      |  String  |
		+------+--------------+----------+
		| Type | SizeUsername | Username |
		+------+--------------+----------+

		[S-C] Validation of the connection
		The serveur answers with a boolean which will indicate whether the username is valid or not. If the username is valid the connection is established.
		+------+-------------+
		| int  |    byte     |
		+------+-------------+
		| Type | Acceptation |
		+------+-------------+
		
		[S-A] Notification of the new connection
		The server notifies all clients that a new one is connected.
		+------+--------------+----------+
		| int  |     int      |  String  |
		+------+--------------+----------+
		| Type | SizeUsername | Username |  
		+------+--------------+----------+

	Sending message to the public domain
		[C-S] Sending message
		The client sends his public message to the server.
		+------+-------------+---------+
		| int  |     int     | String  |
		+------+-------------+---------+
		| Type | SizeMessage | Message |
		+------+-------------+---------+

		[S-A] Retransmission of the message
		The server forwards the public message to all connected clients.
		+------+--------------+----------+-------------+---------+
		| int  |     int      |  String  |     int     | String  |
		+------+--------------+----------+-------------+---------+
		| Type | SizeUsername | Username | SizeMessage | Message |
		+------+--------------+----------+-------------+---------+

	Requesting private connection
		[C-S] Requesting connection between the source(Src) and the destination(Dst)
		The client Src notifies the server that he wants to be connected with the client Dst.
		+------+-----------------+-------------+
		| int  |       int       |   String    |
		+------+-----------------+-------------+
		| Type | SizeUsernameDst | UsernameDst |
		+------+-----------------+-------------+

		[S-C] Notification of a new private connection request
		The server notifies the client Dst that he received a connection request from client Src.
		+------+-----------------+-------------+
		| int  |       int       |   String    |
		+------+-----------------+-------------+
		| Type | SizeUsernameSrc | UsernameSrc |
		+------+-----------------+-------------+

		[C-S] Accept the connection request to Src
		The client Dst notifies the server that he accepts the private connection request of client Src.
		+------+-----------------+-------------+
		| int  |       int       |   String    |
		+------+-----------------+-------------+
		| Type | SizeUsernameSrc | UsernameSrc |
		+------+-----------------+-------------+

		[S-C] Sending data of Dst to Src
		The server sends the private connection data for the private connection of client Src to client Dst.
		+------+-----------------+-------------+----------------+------------+
		| int  |       int       |   String    |      int       |   bytes    |
		+------+-----------------+-------------+----------------+------------+
		| Type | SizeUsernameDst | UsernameDst | SizeAddressDst | AddressDst |
		+------+-----------------+-------------+----------------+------------+
		
		[C-S] Sending connection data of Src
		The client Src sends the private connection data to the server.
		+------+-----------------+-------------+-------------+----------+
		| int  |       int       |   String    |     int     |   int    |
		+------+-----------------+-------------+-------------+----------+
		| Type | SizeUsernameDst | UsernameDst | PortMessage | PortFile |
		+------+-----------------+-------------+-------------+----------+
		
		[S-C] Sending data of Src to Dst
		The server sends the private connection data for the private connection of client Dst to client Src.
		+------+-----------------+-------------+----------------+------------+-------------+----------+
		| int  |       int       |   String    |      int       |   bytes    |     int     |   int    |
		+------+-----------------+-------------+----------------+------------+-------------+----------+
		| Type | SizeUsernameSrc | UsernameSrc | SizeAddressSrc | AddressSrc | PortMessage | PortFile |
		+------+-----------------+-------------+----------------+------------+-------------+----------+

	Sending private message
		[C-C] Sending private message between Src and Dst
		The client Src sends a message to client Dst.
		+------+-------------+---------+
		| int  |     int     | String  |
		+------+-------------+---------+
		| Type | SizeMessage | Message |
		+------+-------------+---------+

	Sending file in private
		[C-C] Sending file between Src and Dst		
		The client Src sends a file to client Dst. The file is segmented into chunk with a fixed size (only the last part can be smaller).
		+------+------------+-------------+-------+
		| int  |    long    |    bytes    | bytes |
		+------+------------+-------------+-------+
		| Type |  SizeFile  |  FileChunk  |  ...  |
		+------+------------+-------------+-------+

	Private sign out
		[C-C] Sign out
		The client notifies his interlocutor that he wants to terminate the private connection.
		+------+
		| int  |
		+------+
		| Type |
		+------+

	Public sign out
		[C-S] Sign out
		The client notifies the server that he wants to terminate the connection.
		+------+
		| int  |
		+------+
		| Type |
		+------+

		[S-A] Sign out notification
		The server notifies all clients that a client has left the chat room.
		+------+--------------+----------+
		| int  |     int      |  String  |
		+------+--------------+----------+
		| Type | SizeUsername | Username |
		+------+--------------+----------+
